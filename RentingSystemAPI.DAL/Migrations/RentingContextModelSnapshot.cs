// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentingSystemAPI.DAL.Context;

namespace RentingSystemAPI.DAL.Migrations
{
    [DbContext(typeof(RentingContext))]
    partial class RentingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentingSystemAPI.BAL.Authorization.Password", b =>
                {
                    b.Property<int>("PasswordId")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("PasswordId");

                    b.ToTable("Passwords");
                });

            modelBuilder.Entity("RentingSystemAPI.BAL.Entities.AccountPermission", b =>
                {
                    b.Property<int>("AccountPermissionId")
                        .HasColumnType("int");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChangingPermission")
                        .HasColumnType("bit");

                    b.Property<bool>("Looking")
                        .HasColumnType("bit");

                    b.Property<bool>("Receiving")
                        .HasColumnType("bit");

                    b.Property<bool>("Renting")
                        .HasColumnType("bit");

                    b.HasKey("AccountPermissionId");

                    b.ToTable("AccountPermission");
                });

            modelBuilder.Entity("RentingSystemAPI.BAL.Entities.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentationURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RentingSystemAPI.BAL.Entities.Rent", b =>
                {
                    b.Property<int>("RentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxReturnTimeInDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RentReturnTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WhenShouldBeReturned")
                        .HasColumnType("datetime2");

                    b.HasKey("RentId");

                    b.HasIndex("UserId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("RentingSystemAPI.BAL.Entities.RentedItem", b =>
                {
                    b.Property<int>("RentedItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("RentId")
                        .HasColumnType("int");

                    b.HasKey("RentedItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("RentId");

                    b.ToTable("RentedItem");
                });

            modelBuilder.Entity("RentingSystemAPI.BAL.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RentingSystemAPI.BAL.Authorization.Password", b =>
                {
                    b.HasOne("RentingSystemAPI.BAL.Entities.User", "User")
                        .WithOne("Password")
                        .HasForeignKey("RentingSystemAPI.BAL.Authorization.Password", "PasswordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentingSystemAPI.BAL.Entities.AccountPermission", b =>
                {
                    b.HasOne("RentingSystemAPI.BAL.Entities.User", "User")
                        .WithOne("AccountPermission")
                        .HasForeignKey("RentingSystemAPI.BAL.Entities.AccountPermission", "AccountPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentingSystemAPI.BAL.Entities.Rent", b =>
                {
                    b.HasOne("RentingSystemAPI.BAL.Entities.User", null)
                        .WithMany("Rents")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("RentingSystemAPI.BAL.Entities.RentedItem", b =>
                {
                    b.HasOne("RentingSystemAPI.BAL.Entities.Item", null)
                        .WithMany("RentedItems")
                        .HasForeignKey("ItemId");

                    b.HasOne("RentingSystemAPI.BAL.Entities.Rent", null)
                        .WithMany("RentedItems")
                        .HasForeignKey("RentId");
                });
#pragma warning restore 612, 618
        }
    }
}
