version: '3.7'

services:
  rentingsystem:
    container_name: rentingsystem
    image: ${DOCKER_REGISTRY-}rentingsystem
    build:
      context: .
      dockerfile: RentingSystem/Dockerfile
    depends_on:
        - DataBaseSQL
        - rentingsystemapi
    environment:
        - API_URL=rentingsystemapi:5000
    ports:
        - "3000:80"
        - "3001:443"
    networks:
        net:
            ipv4_address: 172.28.0.2
    
  rentingsystemapi:
    container_name: rentingsystemapi
    image: ${DOCKER_REGISTRY-}rentingsystemapi
    build:
      context: .
      dockerfile: RentingSystemAPI/Dockerfile
    depends_on:
        - DataBaseSQL
    environment:
        DBServer: DataBaseSQL
    ports:
        - "8000:80"
        - "8001:443"
        - "0.0.0.0:80:5000"
    networks:
        net:
            ipv4_address: 172.28.0.3

  DataBaseSQL:
    container_name: DataBaseSQL
    image: mcr.microsoft.com/mssql/server:2019-CU3-ubuntu-18.04
    environment:
        ACCEPT_EULA: Y
        SA_PASSWORD: Password2020
    ports:
        - "1433:1433"
    volumes:
        - ./Database:/var/opt/mssql/bak
    networks:
        net:
            ipv4_address: 172.28.0.4
            

volumes:
    DataBase:
networks:
    net:
        driver: bridge
        name: net
        ipam:
            config:
              -  subnet: 172.28.0.0/24                 